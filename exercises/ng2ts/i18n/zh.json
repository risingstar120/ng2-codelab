{
    "Buy awesome speakers on our web site.": "",
    "Check out our web site": "",
    "days": "",
    "years ago": "",
    "There is actually no simple way to test it, just make sure it looks nice :)": "",
    "Create a class called 'Codelab'": "",
    "Export the class": "",
    "Add a constructor": "",
    "The codelab class doesn't have constuctor": "",
    "Make constructor take a parameter 'guests'": "",
    "Codelab constructor should take one parameter called 'guests'": "",
    "This parameter should be public": "",
    "Create new method 'getGuestsComing'": "",
    "Modify getGuestsComing to filter the guests array and only return guests with the 'coming' property set to true. \n  (hint: please use Array.filter method, and NOT a for loop. Ask us for help if you don't know how to\n   (There's potential of getting into an infinite loop otherwise)": "",
    "ContextComponent: Inject the ContextService into the constructor and store it as a property.": "",
    "ContextComponent: Inject the parent component (VideoComponent) into the constructor and store it as a property.": "",
    "ContextComponent: Add an ngOnInit method to the component. (It's a special method angular will call when the component is created).": "",
    "ContextComponent: In the onOnInit method Call 'getAdText' on the service, and pass it the video 'description' provided by the injected video component. Assign the result to the declared text property.": "",
    "AppModule: Add the ContextComponent to the AppModule declarations (We did this for you).": "",
    "video.html: Actually display the ad (We actually also did it for you).": "",
    "Create a class called AppComponent": "",
    "Export the created class": "",
    "Add a Component decorator for the class": "",
    "Add a selector to the component decorator": "",
    "Add a template that contains: '<h1>Hello CatTube!</h1>'": "",
    "Create a class called 'AppModule'": "",
    "Add a NgModule decorator for the class": "",
    "Add 'BrowseModule' to the NgModule decorator imports": "",
    "Add 'AppComponent' to the 'declarations' property of the decorator": "",
    "Add 'AppComponent' to the 'bootstrap' property of the decorator": "",
    "VideoService.ts: Add @Injectable() decorator to the classs": "",
    "Appmodule.ts: Add VideoService to the NgModule providers property": "",
    "AppComponent.ts: Inject videoService in the component constructor": "",
    "AppComponent.ts: When searching assign videoService.search results to the videos property of the class": "",
    "Create a class called FuzzyPipe": "",
    "Export it": "",
    "Add a @Pipe() decorator": "",
    "Set the name to fuzzy": "",
    "Make it return '2 days ago for '${formattedDate}'": "",
    "AppModule: Add the FuzzyPipe to the AppModule declarations": "",
    "video.html: Use the pipe on the date.": "",
    "AppComponent.ts: Add a 'videos' property, set the value as empty array.": "",
    "AppComponent.ts: Add a 'search' method on the component, that takes a 'searchString' parameter.": "",
    "app.html: Add a message saying 'No videos' which is displayed only when the videos array is empty": "",
    "app.html: Iterate over the videos using '*NgFor', and display a title for each": "",
    "app.html: Also display a thumbnail": "",
    "#Bonus AppComponent.ts: When the component is created, trigger a search for an empty string. ": "",
    "app.html: Add a <h1> header, display the 'title' property of the AppComponent inside": "",
    "app.html: Add an <input> with a 'placeholder' set to 'video' (hint: 'placeholder' is just an attribute of an input tag) ": "",
    "app.html: Add a <button> labeled 'search'": "",
    "thumbs.html: Add a button with a 'thumbs-up' CSS class.": "",
    "thumbs.html: Add a button with a 'thumbs-down' CSS class.": "",
    "ThumbsComponent.ts: Set the selector to be 'my-thumbs'.": "",
    "ThumbsComponent.ts: Set the templateUrl to load appropriate html file.": "",
    "ThumbsComponent.ts: Add an 'onThumbs' property and set the value to a new EventEmitter. Decorate with @Output()": "",
    "thumbs.html: Make the 'thumbs-up' button emit the onThumbs event with the correct thumbs ENUM value.": "",
    "thumbs.html: Make the 'thumbs-down' button emit the onThumbs event with the correct thumbs ENUM value.": "",
    "AppModule: Add the ThumbsComponent to the AppModule 'declarations' property": "",
    "video.html: Use the thumbs component in the template": "",
    "VideoComponent: Listen to the thumbs component onThumbs event, and update the amount of likes accordingly": "",
    "TogglePanelComponent.ts: We added the template and the selector for you, enjoy!": "",
    "TogglePanelComponent.ts: Add a boolean property to the component. The property can have any name, and must have a default value.": "",
    "togglePanel.html: Use content projection to only display the content with the selector .description by default.": "",
    "togglePanel.html: Add a button to show extra information": "",
    "togglePanel.html: When the button is pressed, switch the flag and only display the content with the '.extra' selector.": "",
    "togglePanel.html: Add a button to come back to the description": "",
    "AppModule: Add the TogglePanelComponent to the AppModule declarations.": "",
    "video.html: Use the TogglePanel component in the template": "",
    "video.html: Add .description as TogglePanel's content": "",
    "video.html: Add .extra as TogglePanel's content": "",
    "VideoComponent.ts: Set the selector property to 'my-video'.": "",
    "VideoComponent.ts: Set the templateUrl to load the appropriate html file": "",
    "VideoComponent.ts: Add a video property and decorate it with @Input()": "",
    "Video.html: Display the video title": "",
    "Video.html: Display the video thumbnail": "",
    "Video.html: Display the video description": "",
    "Video.html: Display the video date": "",
    "Video.html: Display the number video likes": "",
    "Video.html: Display the number of video views": "",
    "AppModule: Add the VideoComponent to the AppModule 'declarations'.": "",
    "app.html: Use video component (get rid of the old title/thumbnail)": "",
    "app.html: Use the data binding to pass the video object to the component (don't forget the square brackets)": "",
    "Sir Isaac Newton": "",
    "Marie Curie": "",
    "Albert Einstein": "",
    "Charles Darwin": ""
}
